javascript:(function()%7Bclass AssessmentHelper %7B%0A  constructor() %7B%0A    this.itemMetadata %3D %7B%0A      questions%3A LearnosityAssess.getCurrentItem().questions%2C%0A      UI%3A this.createUI()%2C%0A      answerUI%3A this.createAnswerUI()%0A    %7D%3B%0A    this.processedQuestions %3D new Map()%3B%0A    this.initializeUI()%3B%0A  %7D%0A%0A  createUI() %7B%0A    const container %3D document.createElement("div")%3B%0A    container.innerHTML %3D %60%0A      <div id%3D"Launcher" class%3D"Launcher" style%3D"outline%3A none%3Bmin-height%3A 160px%3Btransform%3A %0A      translateX(0px) translateY(-32px)%3Bopacity%3A 0.95%3Bfont-family%3A 'Nunito'%2C sans-serif%3Bwidth%3A 140px%3Bheight%3A 180px%3Bbackground%3A %0A      %231c1e2b%3Bposition%3A absolute%3Bborder-radius%3A 16px%3Bdisplay%3A grid%3Bplace-items%3A center%3Bcolor%3A white%3Bfont-size%3A larger%3Btop%3A 213px%3Bleft%3A 1141px%3B position%3Aabsolute%3B z-index%3A 99999%3Bpadding%3A 10px%3Bbox-shadow%3A 0 8px 16px rgba(0%2C0%2C0%2C0.3)%3Bresize%3A both%3Boverflow%3A hidden%3Bwhite-space%3A nowrap%3B">%0A        <div class%3D"drag-handle" style%3D"width%3A 100%25%3B height%3A 20px%3B cursor%3A move%3B background%3A transparent%3B"><%2Fdiv>%0A        <button id%3D"closeButton" style%3D"position%3A absolute%3B top%3A 5px%3B right%3A 5px%3B background%3A none%3B border%3A none%3B color%3A white%3B font-size%3A 16px%3B cursor%3A pointer%3B">Ã—<%2Fbutton>%0A        <svg version%3D"1.0" xmlns%3D"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width%3D"24" height%3D"18.6" viewBox%3D"0 0 300.000000 233.000000" class%3D"center" style%3D"margin%3A 2px%3B">%0A            <g transform%3D"translate(0.000000%2C233.000000) scale(0.100000%2C-0.100000)" fill%3D"white" stroke%3D"none">%0A              <path d%3D"M710 2280 c-16 -16 -20 -33 -20 -80 l0 -60 -64 0 c-56 0 -67 -3 -80 -22 -21 -30 -20 -50 4 -76 17 -18 32 -22 80 -22 l60 0 0 -53 c0 -62 20 -97 56 -97 53 0 64 15 64 85 l0 65 60 0 c87 0 124 42 84 98 -13 19 -24 22 -80 22 l-64 0 0 64 c0 56 -3 67 -22 80 -30 21 -54 20 -78 -4z m63 -47 c2 -10 5 -31 6 -47 2 -40 27 -76 54 -78 12 0 35 -2 50 -3 69 -5 51 -41 -23 -46 -54 -4 -80 -31 -80 -82 0 -36 -24 -72 -41 -62 -5 4 -9 24 -9 46 0 55 -41 97 -94 97 -21 0 -43 5 -49 11 -16 16 21 40 64 41 44 0 65 22 74 75 4 22 8 46 10 53 6 18 33 15 38 -5z"%2F>%0A            <path d%3D"M2680 2210 c-277 -5 -296 -9 -356 -68 -28 -29 -84 -106 -84 -117 0 -4 -8 -19 -18 -33 -11 -15 -41 -67 -67 -117 -26 -49 -58 -106 -70 -125 -20 -33 -53 -91 -113 -201 l-25 -47 118 -182 c65 -100 129 -189 142 -197 13 -9 40 -21 61 -28 32 -11 37 -18 38 -45 1 -40 18 -58 42 -43 14 9 17 25 16 89 -2 89 -10 92 79 -30 78 -106 99 -89 95 75 l-3 114 -25 0 c-25 0 -25 -1 -21 -74 2 -47 0 -72 -7 -70 -6 2 -27 29 -47 59 l-37 55 21 40 c22 42 53 98 86 153 22 36 50 41 106 18 41 -17 69 -41 93 -78 31 -47 96 -34 96 20 0 38 -95 125 -160 147 -30 10 -57 19 -59 21 -2 2 4 16 14 31 31 47 365 631 365 638 0 3 -6 4 -12 3 -7 -1 -128 -5 -268 -8z m93 -39 c68 -1 107 -5 107 -12 0 -6 -61 -117 -137 -247 -146 -255 -193 -343 -193 -365 0 -8 7 -20 15 -27 23 -19 18 -30 -14 -30 -22 0 -38 -10 -63 -39 -49 -57 -119 -189 -120 -225 -1 -17 -9 -42 -19 -55 -11 -13 -19 -30 -19 -37 0 -20 -18 -17 -70 9 -42 22 -64 48 -155 190 -5 8 -31 46 -57 85 -27 38 -48 77 -48 86 0 8 8 30 18 48 102 181 230 412 249 449 30 58 88 120 134 145 30 17 167 32 244 28 11 -1 68 -2 128 -3z"%2F>%0A            <path d%3D"M1355 2194 c-79 -21 -205 -89 -260 -140 -27 -25 -41 -42 -30 -39 150 52 295 45 432 -21 32 -15 61 -30 64 -31 4 -2 10 8 13 22 7 29 59 65 94 65 55 0 104 -44 121 -107 14 -52 41 -70 81 -53 49 20 47 77 -4 164 -37 63 -100 101 -237 145 -47 15 -211 12 -274 -5z m39 -36 c-6 -10 -5 -10 7 -1 9 7 52 11 112 11 164 0 286 -61 335 -167 20 -44 22 -55 11 -62 -21 -13 -29 -11 -29 10 0 11 -4 22 -10 26 -5 3 -6 13 -3 23 3 9 3 14 -2 10 -4 -4 -19 7 -32 24 -12 18 -23 29 -23 24 0 -4 -10 0 -22 8 -45 32 -126 18 -176 -31 -18 -17 -29 -16 -78 6 -55 25 -133 41 -199 41 -30 0 -56 4 -59 9 -4 5 13 18 36 29 65 30 81 35 100 33 9 -1 19 3 23 9 3 5 8 10 11 10 3 0 2 -6 -2 -12z"%2F>%0A            <path d%3D"M1053 1829 c-81 -10 -186 -61 -243 -119 -38 -38 -82 -103 -156 -235 -12 -21 -92 -151 -137 -222 -41 -64 -16 -52 40 20 152 192 224 237 382 237 87 0 126 -12 199 -58 78 -50 93 -71 342 -472 263 -423 275 -439 373 -491 144 -77 285 -78 432 -4 85 44 135 100 232 266 49 85 111 189 138 232 26 42 46 79 43 82 -2 3 -37 -35 -76 -84 -39 -48 -90 -105 -113 -126 -157 -142 -411 -121 -536 44 -19 25 -91 136 -160 246 -359 571 -353 562 -437 617 -93 60 -200 82 -323 67z m199 -49 c127 -42 182 -94 283 -262 59 -98 109 -179 162 -261 36 -54 74 -115 86 -137 116 -206 206 -314 304 -362 56 -28 79 -33 158 -36 81 -4 98 -1 159 23 37 15 69 25 71 23 9 -8 -81 -145 -120 -183 -77 -75 -210 -122 -314 -112 -163 16 -249 83 -388 303 -7 10 -40 64 -74 119 -34 55 -69 111 -78 125 -8 14 -16 28 -16 32 0 3 -12 19 -26 35 -14 16 -28 36 -31 44 -4 9 -44 74 -91 145 -112 171 -177 227 -296 258 -72 18 -139 20 -196 5 -22 -6 -48 -11 -57 -12 -10 -1 -18 -4 -18 -8 0 -4 -14 -12 -30 -18 l-31 -10 33 62 c64 119 200 233 276 231 12 -1 22 2 22 7 0 15 158 7 212 -11z"%2F>%0A            <path d%3D"M1632 1808 c-7 -7 -12 -27 -12 -45 0 -31 -2 -33 -34 -33 -38 0 -60 -19 -50 -44 6 -17 40 -29 65 -24 10 2 15 -8 17 -34 2 -27 9 -39 24 -44 27 -8 42 9 42 48 1 29 4 33 26 30 36 -4 64 19 56 46 -6 18 -15 22 -48 22 -40 0 -40 0 -34 31 4 24 2 35 -11 45 -22 17 -26 17 -41 2z m36 -95 c11 -22 5 -43 -13 -43 -21 0 -35 31 -21 46 15 18 24 17 34 -3z"%2F>%0A            <path d%3D"M2756 1648 c-21 -30 -20 -44 4 -68 38 -38 90 -15 90 40 0 50 -66 69 -94 28z"%2F>%0A            <path d%3D"M702 1194 c-60 -30 -99 -72 -156 -171 -23 -39 -148 -248 -278 -466 l-238 -395 0 -61 0 -62 273 3 c390 4 354 -22 623 445 32 56 62 102 66 103 4 0 24 -28 44 -62 108 -178 186 -288 242 -339 165 -153 411 -192 632 -99 80 34 241 152 226 167 -3 3 -11 1 -18 -4 -49 -37 -200 -43 -316 -12 -163 44 -271 131 -376 306 -21 35 -39 63 -41 63 -3 0 -19 -9 -37 -20 -67 -41 -155 -13 -185 57 -23 56 -12 101 36 144 l39 35 -103 156 c-135 203 -180 238 -313 238 -53 0 -79 -6 -120 -26z m224 -32 c21 -11 48 -28 59 -39 32 -29 104 -130 98 -137 -3 -3 2 -8 11 -12 9 -3 16 -12 16 -20 0 -8 5 -14 10 -14 6 0 10 -5 10 -11 0 -6 9 -24 21 -40 21 -30 33 -69 20 -69 -4 0 -17 -17 -29 -39 -27 -48 -28 -112 -2 -166 11 -22 19 -36 20 -32 0 4 10 -1 21 -12 17 -15 20 -27 16 -50 -8 -40 35 -95 68 -89 20 4 21 3 10 -19 -17 -32 -9 -59 26 -84 29 -20 30 -20 61 -2 17 10 35 29 40 42 7 20 3 29 -28 57 -19 19 -39 32 -43 30 -3 -2 -6 15 -6 39 0 37 3 45 23 50 26 6 38 -3 72 -60 33 -54 38 -60 90 -114 108 -113 223 -170 371 -186 65 -8 79 -12 79 -24 0 -9 -15 -16 -133 -57 -131 -46 -301 -27 -436 49 -59 33 -181 149 -181 173 0 8 -4 14 -10 14 -5 0 -10 7 -10 15 0 8 -5 15 -11 15 -5 0 -8 4 -5 9 4 5 3 11 -1 13 -8 3 -27 31 -85 124 -25 38 -84 104 -94 104 -3 0 -12 -6 -20 -14 -7 -8 -18 -16 -23 -18 -11 -4 -161 -254 -161 -268 0 -6 -3 -10 -8 -10 -4 0 -18 -21 -32 -47 -39 -76 -88 -129 -146 -158 -53 -27 -57 -27 -246 -27 -106 -1 -214 0 -240 1 l-48 1 0 36 c0 30 30 105 50 124 3 3 11 16 18 30 7 14 24 43 37 65 14 22 28 47 32 55 7 16 77 127 90 145 5 6 17 28 28 50 11 21 25 43 31 49 5 6 20 31 33 56 12 25 47 83 77 130 30 47 68 111 86 143 17 31 34 57 38 57 4 0 11 11 14 24 10 38 68 94 127 119 64 29 137 28 195 -1z m359 -642 c18 -20 18 -21 -3 -42 -17 -18 -23 -19 -36 -8 -19 15 -21 41 -4 58 16 16 22 15 43 -8z"%2F>%0A          <%2Fg>%0A        <%2Fsvg>%0A        <h1 class%3D"title" style%3D"font-size%3A 22px%3B margin%3A 5px 0%3B">Nova<%2Fh1>%0A        <h1 class%3D"bottomTitle" style%3D"font-size%3A 12px%3B margin%3A 3px 0%3B">1.0<%2Fh1>%0A        <button id%3D"answer" class%3D"button" style%3D"font-size%3A 12px%3B padding%3A 8px 16px%3B background%3A %232c2f3f%3B border%3A none%3B color%3A white%3B border-radius%3A 6px%3B cursor%3A pointer%3B margin-bottom%3A 8px%3B">Get Answer<%2Fbutton>%0A        <div class%3D"watermark" style%3D"position%3A absolute%3B bottom%3A 4px%3B left%3A 50%25%3B transform%3A translateX(-50%25)%3B font-size%3A 10px%3B color%3A rgba(255%2C 255%2C 255%2C 0.5)%3B white-space%3A nowrap%3B">2025 - cpmjaguar1234<%2Fdiv>%0A      <%2Fdiv>%0A    %60%3B%0A    return container%3B%0A  %7D%0A%0A  createAnswerUI() %7B%0A    const answerContainer %3D document.createElement("div")%3B%0A    answerContainer.innerHTML %3D %60%0A      <div id%3D"AnswerLauncher" class%3D"AnswerLauncher" style%3D"outline%3A none%3Bmin-height%3A 100px%3Btransform%3A %0A      translateX(0px) translateY(-32px)%3Bopacity%3A 0.95%3Bfont-family%3A 'Nunito'%2C sans-serif%3Bwidth%3A 200px%3Bheight%3A auto%3Bbackground%3A %0A      %231c1e2b%3Bposition%3A absolute%3Bborder-radius%3A 16px%3Bdisplay%3A grid%3Bplace-items%3A center%3Bcolor%3A white%3Bfont-size%3A larger%3Btop%3A 300px%3Bleft%3A 21px%3B position%3Aabsolute%3B z-index%3A 99999%3Bpadding%3A 10px%3Bbox-shadow%3A 0 8px 16px rgba(0%2C0%2C0%2C0.3)%3Bresize%3A both%3Boverflow%3A hidden%3B">%0A        <div class%3D"drag-handle" style%3D"width%3A 100%25%3B height%3A 20px%3B cursor%3A move%3B background%3A transparent%3B"><%2Fdiv>%0A        <div id%3D"answerSection" style%3D"color%3A white%3B font-size%3A 14px%3B background%3A %232c2f3f%3B padding%3A 5px%3B border-radius%3A 8px%3B box-shadow%3A 0 4px 8px rgba(0%2C0%2C0%2C0.2)%3B width%3A 100%25%3B overflow%3A auto%3B max-height%3A 100px%3B"><%2Fdiv>%0A      <%2Fdiv>%0A    %60%3B%0A    return answerContainer%3B%0A  %7D%0A%0A  initializeUI() %7B%0A    document.body.appendChild(this.itemMetadata.UI)%3B%0A    document.body.appendChild(this.itemMetadata.answerUI)%3B%0A    this.makeDraggable(this.itemMetadata.UI.firstElementChild)%3B%0A    this.makeDraggable(this.itemMetadata.answerUI.firstElementChild)%3B %2F%2F Make the answer UI draggable%0A    this.makeResizable(this.itemMetadata.UI.firstElementChild)%3B%0A    this.setupAnswerButton()%3B%0A    this.setupToggleVisibility()%3B%0A    %0A    %2F%2F Setup close button functionality%0A    const closeButton %3D document.getElementById('closeButton')%3B%0A    if (closeButton) %7B%0A      closeButton.onclick %3D () %3D> %7B%0A        document.body.removeChild(this.itemMetadata.UI)%3B%0A        document.body.removeChild(this.itemMetadata.answerUI)%3B%0A      %7D%3B%0A    %7D%0A  %7D%0A%0A  setupToggleVisibility() %7B%0A    document.addEventListener('keydown'%2C (event) %3D> %7B%0A      if (event.altKey %26%26 event.code %3D%3D%3D 'KeyC') %7B%0A        const launcher %3D document.getElementById('Launcher')%3B%0A        const answerLauncher %3D document.getElementById('AnswerLauncher')%3B%0A        const newDisplay %3D launcher.style.display %3D%3D%3D 'none' %3F 'block' %3A 'none'%3B%0A        launcher.style.display %3D newDisplay%3B%0A        answerLauncher.style.display %3D newDisplay%3B%0A      %7D%0A      %2F%2F Handle both Alt %2B X and Ctrl %2B V for getting answers%0A      else if ((event.altKey %26%26 event.code %3D%3D%3D 'KeyX') %7C%7C (event.ctrlKey %26%26 event.code %3D%3D%3D 'KeyV')) %7B%0A        this.getQuestionAnswers()%3B%0A      %7D%0A    %7D)%3B%0A  %7D%0A%0A  makeResizable(element) %7B%0A    const minWidth %3D 200%3B%0A    const minHeight %3D 200%3B%0A  %0A    const resizeObserver %3D new ResizeObserver(entries %3D> %7B%0A      for (let entry of entries) %7B%0A        const width %3D entry.contentRect.width%3B%0A        const height %3D entry.contentRect.height%3B%0A        %0A%0A  %0A        if (width < minWidth) element.style.width %3D minWidth %2B 'px'%3B%0A        if (height < minHeight) element.style.height %3D minHeight %2B 'px'%3B%0A  %0A        %2F%2F Scale the title and button appropriately%0A        const scale %3D Math.min(width %2F minWidth%2C height %2F minHeight%2C 2)%3B %2F%2F max scale of 2%0A        const title %3D element.querySelector('.title')%3B%0A        const bottomTitle %3D element.querySelector('.bottomTitle')%3B%0A        const button %3D element.querySelector('.button')%3B%0A        const answerSection %3D element.querySelector('%23answerSection')%3B%0A        const svg %3D element.querySelector('svg')%3B%0A  %0A        if (title) title.style.fontSize %3D (28 * scale) %2B 'px'%3B%0A        if (bottomTitle) bottomTitle.style.fontSize %3D (14 * scale) %2B 'px'%3B%0A        if (button) %7B%0A          button.style.width %3D (Math.min(width - 40%2C 360)) %2B 'px'%3B%0A          button.style.fontSize %3D (14 * scale) %2B 'px'%3B%0A          button.style.padding %3D (10 * scale) %2B 'px ' %2B (20 * scale) %2B 'px'%3B%0A        %7D%0A        if (answerSection) %7B%0A          answerSection.style.width %3D button.style.width%3B%0A          answerSection.style.fontSize %3D (14 * scale) %2B 'px'%3B%0A          answerSection.style.maxHeight %3D (height - 200) %2B 'px'%3B%0A        %7D%0A        if (svg) %7B%0A          const svgSize %3D Math.min(width%2C height) * 0.32%3B %2F%2F SVG size will be 20%25 of the smaller container dimension%0A          svg.style.width %3D svgSize %2B 'px'%3B%0A          svg.style.height %3D svgSize %2B 'px'%3B%0A          svg.setAttribute('width'%2C svgSize)%3B%0A          svg.setAttribute('height'%2C svgSize)%3B%0A        %7D%0A      %7D%0A    %7D)%3B%0A  %0A    resizeObserver.observe(element)%3B%0A  %7D%0A%0A  setupAnswerButton() %7B%0A    const answerButtons %3D document.querySelectorAll('.button')%3B%0A    answerButtons.forEach(button %3D> %7B%0A      button.onclick %3D () %3D> this.getQuestionAnswers()%3B%0A    %7D)%3B%0A  %7D%0A%0A  getQuestionAnswers() %7B%0A    const currentQuestions %3D LearnosityAssess.getCurrentItem().questions%3B%0A    const answerSection %3D document.getElementById('answerSection')%3B%0A    answerSection.innerHTML %3D ''%3B %2F%2F Clear previous answers%0A    %0A    let allAnswers %3D %5B%5D%3B%0A  %0A    for (let i %3D 0%3B i < currentQuestions.length%3B i%2B%2B) %7B%0A      const question %3D currentQuestions%5Bi%5D%3B%0A      const type %3D question.type%3B%0A      %0A      let answers %3D %5B%5D%3B%0A  %0A      if (type %3D%3D%3D "clozeassociation") %7B%0A        const validResponse %3D question.validation.valid_response%3B%0A        for (let j %3D 0%3B j < validResponse.value.length%3B j%2B%2B) %7B%0A          answers.push(validResponse.value%5Bj%5D.toString())%3B%0A        %7D%0A      %7D %0A      else if (type %3D%3D%3D "clozeformula") %7B%0A        const validResponse %3D question.validation.valid_response%3B%0A        for (let j %3D 0%3B j < validResponse.value.length%3B j%2B%2B) %7B%0A          answers.push(validResponse.value%5Bj%5D%5B0%5D.value.toString())%3B%0A        %7D%0A      %7D %0A      else if (type %3D%3D%3D "longtypeV2" %7C%7C type %3D%3D%3D 'longtextV2') %7B%0A        answers.push("Since this is a long answer%2C it can't be solved using the api. Instead%2C use Gemini or Google.")%3B%0A      %7D %0A      else if (type %3D%3D%3D "mcq") %7B%0A        const validResponse %3D question.validation.valid_response%3B%0A        for (let j %3D 0%3B j < validResponse.value.length%3B j%2B%2B) %7B%0A          const answerIndex %3D validResponse.value%5Bj%5D%3B%0A          answers.push(answerIndex.toString())%3B%0A        %7D%0A      %7D %0A      else if (type %3D%3D%3D "clozedropdown") %7B%0A        const validResponse %3D question.validation.valid_response%3B%0A        for (let j %3D 0%3B j < validResponse.value.length%3B j%2B%2B) %7B%0A          answers.push(validResponse.value%5Bj%5D.toString())%3B%0A        %7D%0A      %7D %0A      else if (type %3D%3D%3D "graphplotting") %7B%0A        const validResponse %3D question.validation.valid_response%3B%0A        for (let j %3D 0%3B j < validResponse.value.length%3B j%2B%2B) %7B%0A          if (validResponse.value%5Bj%5D.type %3D%3D%3D "point") %7B%0A            const coords %3D JSON.stringify(validResponse.value%5Bj%5D.coords)%3B%0A            answers.push(coords)%3B%0A          %7D%0A        %7D%0A      %7D%0A  %0A      %2F%2F Display answers in the answer section%0A      const answerText %3D answers.join('%2C ')%3B%0A      answerSection.innerHTML %2B%3D %60<p>%24%7BanswerText%7D<%2Fp>%60%3B%0A      allAnswers.push(answerText)%3B%0A    %7D%0A%0A    %2F%2F Copy all answers to clipboard%0A    const clipboardText %3D allAnswers.join('%5Cn')%3B%0A    navigator.clipboard.writeText(clipboardText).catch(err %3D> %7B%0A      console.error('Failed to copy answers to clipboard%3A'%2C err)%3B%0A    %7D)%3B%0A  %7D%0A%0A  getAnswerHandler(type) %7B%0A    const handlers %3D %7B%0A      clozeassociation%3A (q) %3D> this.handleClozeAssociation(q)%2C%0A      clozeformula%3A (q) %3D> this.handleClozeFormula(q)%2C%0A      longtypeV2%3A () %3D> this.handleLongText()%2C%0A      longtextV2%3A () %3D> this.handleLongText()%2C%0A      mcq%3A (q) %3D> this.handleMCQ(q)%2C%0A      clozedropdown%3A (q) %3D> this.handleClozeDropdown(q)%2C%0A      graphplotting%3A (q) %3D> this.handleGraphPlotting(q)%0A    %7D%3B%0A    return handlers%5Btype%5D%3B%0A  %7D%0A%0A  handleClozeAssociation(question) %7B%0A    return question.validation.valid_response.value%5B0%5D%3B%0A  %7D%0A%0A  handleClozeFormula(question) %7B%0A    return question.validation.valid_response.value%5B0%5D%5B0%5D.value%3B%0A  %7D%0A%0A  handleLongText() %7B%0A    return null%3B%0A  %7D%0A%0A  handleMCQ(question) %7B%0A    const mcqMap %3D %7B 0%3A 'A'%2C 1%3A 'B'%2C 2%3A 'C'%2C 3%3A 'D'%2C 4%3A 'E'%2C 5%3A 'F'%2C 6%3A 'G'%2C 7%3A 'H'%2C 8%3A 'I'%2C 9%3A 'J' %7D%3B%0A    const validResponses %3D question.validation.valid_response.value%3B%0A    const answers %3D validResponses.map(answerIndex %3D> mcqMap%5BanswerIndex%5D)%3B%0A    return answers.join('%2C ')%3B%0A  %7D%0A%0A  handleClozeDropdown(question) %7B%0A    return question.validation.valid_response.value%5B0%5D%3B%0A  %7D%0A%0A  handleGraphPlotting(question) %7B%0A    const value %3D question.validation.valid_response.value%5B0%5D%3B%0A    if (value.type %3D%3D%3D "point") %7B%0A      return JSON.stringify(value.coords)%3B%0A    %7D%0A    return null%3B%0A  %7D%0A%0A  makeDraggable(element) %7B%0A    let pos1 %3D 0%2C pos2 %3D 0%2C pos3 %3D 0%2C pos4 %3D 0%3B%0A  %0A    const dragMouseDown %3D (e) %3D> %7B%0A      e %3D e %7C%7C window.event%3B%0A      e.preventDefault()%3B%0A      pos3 %3D e.clientX%3B%0A      pos4 %3D e.clientY%3B%0A      document.onmouseup %3D closeDragElement%3B%0A      document.onmousemove %3D elementDrag%3B%0A    %7D%3B%0A  %0A    const elementDrag %3D (e) %3D> %7B%0A      e %3D e %7C%7C window.event%3B%0A      e.preventDefault()%3B%0A      pos1 %3D pos3 - e.clientX%3B%0A      pos2 %3D pos4 - e.clientY%3B%0A      pos3 %3D e.clientX%3B%0A      pos4 %3D e.clientY%3B%0A      element.style.top %3D (element.offsetTop - pos2) %2B 'px'%3B%0A      element.style.left %3D (element.offsetLeft - pos1) %2B 'px'%3B%0A      %0A%0A    %7D%3B%0A  %0A    const closeDragElement %3D () %3D> %7B%0A      document.onmouseup %3D null%3B%0A      document.onmousemove %3D null%3B%0A    %7D%3B%0A  %0A    %2F%2F Enable dragging only when clicking on a specific part of the UI%0A    const dragHandle %3D element.querySelector('.drag-handle')%3B%0A    if (dragHandle) %7B%0A      dragHandle.onmousedown %3D dragMouseDown%3B%0A    %7D%0A  %7D%0A%7D%0A%0A%2F%2F Initialize the helper when the script loads%0Aconst assessmentHelper %3D new AssessmentHelper()%3B%7D)()%3B
